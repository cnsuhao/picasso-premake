# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := part
### Rules for action "copy_img1":
quiet_cmd_picasso_gyp_part_target_copy_img1 = ACTION picasso_gyp_part_target_copy_img1 $@
cmd_picasso_gyp_part_target_copy_img1 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(builddir); python tools/cp.py test/pat.png "$(builddir)/pat.png"

$(builddir)/pat.png: obj := $(abs_obj)
$(builddir)/pat.png: builddir := $(abs_builddir)
$(builddir)/pat.png: TOOLSET := $(TOOLSET)
$(builddir)/pat.png: $(srcdir)/test/pat.png FORCE_DO_CMD
	$(call do_cmd,picasso_gyp_part_target_copy_img1)

all_deps += $(builddir)/pat.png
action_picasso_gyp_part_target_copy_img1_outputs := $(builddir)/pat.png

### Rules for action "copy_img2":
quiet_cmd_picasso_gyp_part_target_copy_img2 = ACTION picasso_gyp_part_target_copy_img2 $@
cmd_picasso_gyp_part_target_copy_img2 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(builddir); python tools/cp.py test/selt2.png "$(builddir)/selt2.png"

$(builddir)/selt2.png: obj := $(abs_obj)
$(builddir)/selt2.png: builddir := $(abs_builddir)
$(builddir)/selt2.png: TOOLSET := $(TOOLSET)
$(builddir)/selt2.png: $(srcdir)/test/selt2.png FORCE_DO_CMD
	$(call do_cmd,picasso_gyp_part_target_copy_img2)

all_deps += $(builddir)/selt2.png
action_picasso_gyp_part_target_copy_img2_outputs := $(builddir)/selt2.png


DEFS_Debug := \
	'-D_DEBUG' \
	'-DENABLE_FREE_TYPE2=1' \
	'-DENABLE_FONT_CONFIG=1'

# Flags passed to all source files.
CFLAGS_Debug := \
	`pkg-config --cflags gtk+-2.0`

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-O0 \
	-Wall \
	-g \
	-fPIC \
	-fno-rtti \
	-fno-exceptions \
	-Wno-unused-result

INCS_Debug := \
	-I$(srcdir)/include \
	-I$(srcdir)/build \
	-I$(srcdir)/test

DEFS_Release := \
	'-DNDEBUG' \
	'-DENABLE_FREE_TYPE2=1' \
	'-DENABLE_FONT_CONFIG=1'

# Flags passed to all source files.
CFLAGS_Release := \
	`pkg-config --cflags gtk+-2.0`

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-O3 \
	-Wall \
	-fPIC \
	-fno-rtti \
	-fno-exceptions \
	-Wno-unused-result

INCS_Release := \
	-I$(srcdir)/include \
	-I$(srcdir)/build \
	-I$(srcdir)/test

OBJS := \
	$(obj).target/$(TARGET)/test/part_func.o \
	$(obj).target/$(TARGET)/test/testGtk2.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/lib.target/libpicasso2_sw.so $(obj).target/libpicasso2_sw.so

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action_picasso_gyp_part_target_copy_img1_outputs) $(action_picasso_gyp_part_target_copy_img2_outputs)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(builddir)/part: | $(action_picasso_gyp_part_target_copy_img1_outputs) $(action_picasso_gyp_part_target_copy_img2_outputs)

# Preserve order dependency of special output on deps.
$(action_picasso_gyp_part_target_copy_img1_outputs) $(action_picasso_gyp_part_target_copy_img2_outputs): | $(builddir)/lib.target/libpicasso2_sw.so $(obj).target/libpicasso2_sw.so

LDFLAGS_Debug := \
	-Wl,-rpath=\$$ORIGIN/lib.target/ \
	-Wl,-rpath-link=\$(builddir)/lib.target/

LDFLAGS_Release := \
	-Wl,-rpath=\$$ORIGIN/lib.target/ \
	-Wl,-rpath-link=\$(builddir)/lib.target/

LIBS := \
	-lfreetype \
	-lz `pkg-config --libs gtk+-2.0`

$(builddir)/part: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/part: LIBS := $(LIBS)
$(builddir)/part: LD_INPUTS := $(OBJS) $(obj).target/libpicasso2_sw.so
$(builddir)/part: TOOLSET := $(TOOLSET)
$(builddir)/part: $(OBJS) $(obj).target/libpicasso2_sw.so FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/part
# Add target alias
.PHONY: part
part: $(builddir)/part

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/part

