# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := psx_image
DEFS_Debug := \
	'-DEXPORT' \
	'-D_DEBUG' \
	'-DENABLE_FREE_TYPE2=1' \
	'-DENABLE_FONT_CONFIG=1'

# Flags passed to all source files.
CFLAGS_Debug :=

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-O0 \
	-Wall \
	-g \
	-fPIC \
	-fno-rtti \
	-fno-exceptions \
	-Wno-unused-result

INCS_Debug := \
	-I$(srcdir)/include \
	-I$(srcdir)/build \
	-I$(srcdir)/ext/image_loader

DEFS_Release := \
	'-DEXPORT' \
	'-DNDEBUG' \
	'-DENABLE_FREE_TYPE2=1' \
	'-DENABLE_FONT_CONFIG=1'

# Flags passed to all source files.
CFLAGS_Release :=

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-O3 \
	-Wall \
	-fPIC \
	-fno-rtti \
	-fno-exceptions \
	-Wno-unused-result

INCS_Release := \
	-I$(srcdir)/include \
	-I$(srcdir)/build \
	-I$(srcdir)/ext/image_loader

OBJS := \
	$(obj).target/$(TARGET)/ext/image_loader/psx_image_io.o \
	$(obj).target/$(TARGET)/ext/image_loader/psx_image_loader.o \
	$(obj).target/$(TARGET)/ext/image_loader/psx_image_modules.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/lib.target/libpicasso2_sw.so $(obj).target/libpicasso2_sw.so

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-Wl,-rpath=\$$ORIGIN/lib.target/ \
	-Wl,-rpath-link=\$(builddir)/lib.target/

LDFLAGS_Release := \
	-Wl,-rpath=\$$ORIGIN/lib.target/ \
	-Wl,-rpath-link=\$(builddir)/lib.target/

LIBS :=

$(obj).target/libpsx_image.so: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/libpsx_image.so: LIBS := $(LIBS)
$(obj).target/libpsx_image.so: LD_INPUTS := $(OBJS) $(obj).target/libpicasso2_sw.so
$(obj).target/libpsx_image.so: TOOLSET := $(TOOLSET)
$(obj).target/libpsx_image.so: $(OBJS) $(obj).target/libpicasso2_sw.so FORCE_DO_CMD
	$(call do_cmd,solink)

all_deps += $(obj).target/libpsx_image.so
# Add target alias
.PHONY: psx_image
psx_image: $(builddir)/lib.target/libpsx_image.so

# Copy this to the shared library output path.
$(builddir)/lib.target/libpsx_image.so: TOOLSET := $(TOOLSET)
$(builddir)/lib.target/libpsx_image.so: $(obj).target/libpsx_image.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/lib.target/libpsx_image.so
# Short alias for building this shared library.
.PHONY: libpsx_image.so
libpsx_image.so: $(obj).target/libpsx_image.so $(builddir)/lib.target/libpsx_image.so

# Add shared library to "all" target.
.PHONY: all
all: $(builddir)/lib.target/libpsx_image.so

